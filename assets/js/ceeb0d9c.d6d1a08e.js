"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[850],{22382:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>v,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(74848),s=t(28453);const r={id:"event-types",description:"OdinEye Event types",sidebar_label:"Event types"},i="Event types",l={id:"events/event-types",title:"Event types",description:"OdinEye Event types",source:"@site/docs/events/event-types.md",sourceDirName:"events",slug:"/events/event-types",permalink:"/odin-eye/docs/events/event-types",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"event-types",description:"OdinEye Event types",sidebar_label:"Event types"},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/odin-eye/docs/events/intro"}},o={},c=[{value:"General game events",id:"general-game-events",level:3},{value:"Recurrent events",id:"recurrent-events",level:3},{value:"Diagram",id:"diagram",level:2}];function d(e){const n={br:"br",h1:"h1",h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"event-types",children:"Event types"}),"\n",(0,a.jsx)(n.p,{children:"Events are categorized into two different types:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"General game events"}),"\n",(0,a.jsx)(n.li,{children:"Recurrent events"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"general-game-events",children:"General game events"}),"\n",(0,a.jsx)(n.p,{children:"These types of events signify actions or changes within the game world. They can be triggered by players' actions or by the game instance itself.\nSome exemples of these include:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Player joining a server"}),"\n",(0,a.jsx)(n.li,{children:"Player going to sleep"}),"\n",(0,a.jsx)(n.li,{children:"The start of the evening"}),"\n",(0,a.jsx)(n.li,{children:"The start of a new day"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Use cases for consuming game events include storing and browsing events, as well as executing custom logic when a specific event occurs, such as posting information to a Discord channel."}),"\n",(0,a.jsx)(n.h3,{id:"recurrent-events",children:"Recurrent events"}),"\n",(0,a.jsxs)(n.p,{children:["Recurrent events are snapshots of game statistics taken at regular intervals (defaulting to one second). These events include data regarding the current online players and various properties of the game world.",(0,a.jsx)(n.br,{}),"\n","Use cases for consuming recurrent events include user interfaces that continuously update to display current player health and stamina values."]}),"\n",(0,a.jsx)(n.h2,{id:"diagram",children:"Diagram"}),"\n",(0,a.jsx)(n.mermaid,{value:"classDiagram\n\nMessage <|-- GameEvent\nGameEvent *-- EventType\nGameEvent *-- Player\nMessage <|-- GameStatsSnapshot\nGameStatsSnapshot *-- PlayerStats\nGameStatsSnapshot *-- WorldStats\n\nclass Message{\n    +createdDate: Date\n}\n\nclass GameEvent{\n    +message: String\n    +type: EventType\n    +player: Player\n    +data: Dictionary~string,object~\n}\n\nclass Player{\n    +id: UUID\n    +characterId: String\n    +steamId: String\n    +name: String\n    +health: float\n    +maxHealth: float\n    +stamina: float\n}\n\nclass EventType{\n    Unknown\n    PlayerJoin\n    PlayerSpawn\n    PlayerDeath\n    PlayerDisconnect\n    PlayerChat\n    PlayersSleepStart\n    PlayerSleepStop\n    GameAwake\n    GameQuit\n    WorldLoad\n    WorldSave\n    ServerShutdown\n    GlobalKeyAdd\n    GlobalKeyRemove\n    RandomEventActivate\n    RandomEventDeactivate\n    RandomEventSet\n    EnvironmentMorningStart\n    EnvironmentEveningStart\n}\n\nclass GameStatsSnapshot{\n    +playerStats: PlayerStats[]\n    +worldStats: WorldStats\n}\n\nclass PlayerStats{\n    +id: UUID\n    +characterId: String\n    +health: float\n    +maxHealth: float\n    +stamina: float\n}\n\nclass WorldStats{\n    +dayNumber: int\n    +dayCycle: String\n}"})]})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(96540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);